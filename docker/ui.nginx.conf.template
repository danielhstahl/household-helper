events {
	worker_connections 768;
}
pid /var/run/nginx/nginx.pid;
http {
    # This is a key line for streaming. It disables buffering for all proxy connections.
    proxy_buffering off;
    server {
        listen 8000;
        root /usr/share/nginx/html;
        index index.html;
        include /etc/nginx/mime.types;
        location / {
            try_files $uri /index.html;
        }
        location /api/ {
            # Forward to app service, removing the /api/
            proxy_pass http://${BACKEND_SERVICE}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # These headers are vital for keeping the connection open, especially for SSE.
            proxy_set_header Connection '';
            proxy_http_version 1.1;

            # Prevents Nginx from sending a "chunked" Transfer-Encoding header.
            # While sometimes useful, it can interfere with certain clients or protocols.
            chunked_transfer_encoding off;
        }
        location /docs/ {
            # DONT remove the /docs
            proxy_pass http://${BACKEND_SERVICE};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # These headers are vital for keeping the connection open, especially for SSE.
            proxy_set_header Connection '';
            proxy_http_version 1.1;

            # Prevents Nginx from sending a "chunked" Transfer-Encoding header.
            # While sometimes useful, it can interfere with certain clients or protocols.
            chunked_transfer_encoding off;
        }
        location /ws/ {
            # DONT remove the /ws
            proxy_pass http://${BACKEND_SERVICE};
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }
        location /api/[0-9a-z]+/similar {
            deny all;
            return 403 "This API has been blocked";
        }
    }
}
